{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","scoreAudio","url","AudioClip","onLoad","groundY","y","height","timer","starDuration","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","random0To1","randX","randY","jumpHeight","maxX","width","randomMinus1To1","p","update","dt","gameOver","gainScore","string","toString","audioEngine","playEffect","stopAllActions","director","loadScene"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;;AAOR;AACAC,yBAAiB,CART;AASRC,yBAAiB,CATT;;AAWR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAZA;;AAiBR;AACA;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAnBA;;AAwBR;AACAE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC,SAzBN;;AA8BR;AACAC,oBAAY;AACRV,qBAAS,IADD;AAERW,iBAAKjB,GAAGkB;AAFA;AA/BJ,KAHP;;AAwCL;;AAEAC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKT,MAAL,CAAYU,CAAZ,GAAgB,KAAKV,MAAL,CAAYW,MAAZ,GAAmB,CAAlD,CAFgB,CAEqC;;AAErD;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,YAAL,GAAoB,CAApB;;AAEA;AACA,aAAKC,YAAL;;AAEA;AACA,aAAKC,KAAL,GAAa,CAAb;AACH,KAvDI;;AAyDLD,kBAAc,wBAAW;AACrB;AACA,YAAIE,UAAU3B,GAAG4B,WAAH,CAAe,KAAKvB,UAApB,CAAd;;AAEA;AACA,aAAKwB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;;AAEA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;;AAEA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;;AAEA;AACA,aAAKV,YAAL,GAAoB,KAAKd,eAAL,GAAuBV,GAAGmC,UAAH,MAAmB,KAAK1B,eAAL,GAAuB,KAAKC,eAA/C,CAA3C;AACA,aAAKa,KAAL,GAAa,CAAb;AACH,KAzEI;;AA2ELS,wBAAoB,8BAAW;AAC3B,YAAII,QAAQ,CAAZ;;AAEA;AACA;AACA,YAAIC,QAAQ,KAAKjB,OAAL,GAAepB,GAAGmC,UAAH,KAAkB,KAAKtB,MAAL,CAAYoB,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;;AAEA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAJ,gBAAQpC,GAAGyC,eAAH,KAAuBF,IAA/B;;AAEA;AACA,eAAOvC,GAAG0C,CAAH,CAAKN,KAAL,EAAYC,KAAZ,CAAP;AACH,KAxFI;;AA0FL;;;;;AAMA;AACAM,YAAQ,gBAAUC,EAAV,EAAc;AAClB;AACA;AACA,YAAI,KAAKrB,KAAL,GAAa,KAAKC,YAAtB,EAAoC;AAChC,iBAAKqB,QAAL;AACA;AACH;;AAED,aAAKtB,KAAL,IAAcqB,EAAd;AACH,KA1GI;;AA4GLE,eAAW,qBAAW;AAClB,aAAKpB,KAAL,IAAc,CAAd;;AAEA;AACA,aAAKZ,YAAL,CAAkBiC,MAAlB,GAA2B,YAAY,KAAKrB,KAAL,CAAWsB,QAAX,EAAvC;;AAEA;AACAhD,WAAGiD,WAAH,CAAeC,UAAf,CAA0B,KAAKlC,UAA/B,EAA2C,KAA3C;AACH,KApHI;;AAsHL6B,cAAU,oBAAW;AACjB,aAAKhC,MAAL,CAAYsC,cAAZ,GADiB,CACa;AAC9BnD,WAAGoD,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACH;AAzHI,CAAT","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // This property quotes the PreFab resource of stars\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        // The random scale of disappearing time for stars\n        maxStarDuration: 0,\n        minStarDuration: 0,\n\n        // Ground node for confirming the height of the generated star's position\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n\n        // Player node for obtaining the jump height of the main character and controlling the\n        // movement switch of the main character.\n        player: {\n            default: null,\n            type: cc.Node\n        },\n\n        // Player score\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        },\n\n        // Scoring audio\n        scoreAudio: {\n            default: null,\n            url: cc.AudioClip\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function () {\n        // Obtain the anchor point of ground level on the y-axis\n        this.groundY = this.ground.y + this.ground.height/2; // this.ground.top may also work\n\n        // Initialize lifetime of stars\n        this.timer = 0;\n        this.starDuration = 0;\n\n        // Generate a new star\n        this.spawnNewStar();\n\n        // Initialize score\n        this.score = 0;\n    },\n\n    spawnNewStar: function() {\n        // Generate a new node in the scene with a preset template\n        var newStar = cc.instantiate(this.starPrefab);\n\n        // Put the newly added node under the Canvas node\n        this.node.addChild(newStar);\n\n        // Set up a random position for the star\n        newStar.setPosition(this.getNewStarPosition());\n\n        // Deliver the concrete example of the Game component into the star component\n        newStar.getComponent('Star').game = this;\n\n        // Reset timer, randomly choose a value according to the scale of star duration\n        this.starDuration = this.minStarDuration + cc.random0To1() * (this.maxStarDuration - this.minStarDuration);\n        this.timer = 0;\n    },\n\n    getNewStarPosition: function() {\n        var randX = 0;\n\n        // According to the position of the ground level and the main character's jump height, \n        // randomly obtain an anchor point of the star on the y axis\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n\n        // According to the width of the screen, randomly obain an anchor point of star on the x axis.\n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n\n        // Return to the anchor point of the star\n        return cc.p(randX, randY);\n    },\n\n    /*\n    start () {\n\n    },\n    */\n\n    // update (dt) {},\n    update: function (dt) {\n        // Update timer for each frame, when a new star is not generated after exceeding duration\n        // invoke the logic of game failure\n        if (this.timer > this.starDuration) {\n            this.gameOver();\n            return;\n        }\n\n        this.timer += dt;\n    },\n\n    gainScore: function() {\n        this.score += 1;\n\n        // Update the scoreDisplay label\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        \n        // Play point score audio\n        cc.audioEngine.playEffect(this.scoreAudio, false);\n    },\n\n    gameOver: function() {\n        this.player.stopAllActions(); // Stop the player from jumping\n        cc.director.loadScene('game');\n    },\n});\n"]}