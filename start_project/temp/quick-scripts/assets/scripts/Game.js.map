{"version":3,"sources":["Game.js"],"names":["cc","Class","extends","Component","properties","starPrefab","default","type","Prefab","maxStarDuration","minStarDuration","ground","Node","player","scoreDisplay","Label","onLoad","groundY","y","height","spawnNewStar","score","newStar","instantiate","node","addChild","setPosition","getNewStarPosition","getComponent","game","randX","randY","random0To1","jumpHeight","maxX","width","randomMinus1To1","p","gainScore","string","toString"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,oBAAY;AACRC,qBAAS,IADD;AAERC,kBAAMP,GAAGQ;AAFD,SAFJ;;AAOR;AACAC,yBAAiB,CART;AASRC,yBAAiB,CATT;;AAWR;AACAC,gBAAQ;AACJL,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAZA;;AAiBR;AACA;AACAC,gBAAQ;AACJP,qBAAS,IADL;AAEJC,kBAAMP,GAAGY;AAFL,SAnBA;;AAwBR;AACAE,sBAAc;AACVR,qBAAS,IADC;AAEVC,kBAAMP,GAAGe;AAFC;AAzBN,KAHP;;AAkCL;;AAEAC,YAAQ,kBAAY;AAChB;AACA,aAAKC,OAAL,GAAe,KAAKN,MAAL,CAAYO,CAAZ,GAAgB,KAAKP,MAAL,CAAYQ,MAAZ,GAAmB,CAAlD,CAFgB,CAEqC;;AAErD;AACA,aAAKC,YAAL;;AAEA;AACA,aAAKC,KAAL,GAAa,CAAb;AACH,KA7CI;;AA+CLD,kBAAc,wBAAW;AACrB;AACA,YAAIE,UAAUtB,GAAGuB,WAAH,CAAe,KAAKlB,UAApB,CAAd;;AAEA;AACA,aAAKmB,IAAL,CAAUC,QAAV,CAAmBH,OAAnB;;AAEA;AACAA,gBAAQI,WAAR,CAAoB,KAAKC,kBAAL,EAApB;;AAEA;AACAL,gBAAQM,YAAR,CAAqB,MAArB,EAA6BC,IAA7B,GAAoC,IAApC;AACH,KA3DI;;AA6DLF,wBAAoB,8BAAW;AAC3B,YAAIG,QAAQ,CAAZ;;AAEA;AACA;AACA,YAAIC,QAAQ,KAAKd,OAAL,GAAejB,GAAGgC,UAAH,KAAkB,KAAKnB,MAAL,CAAYe,YAAZ,CAAyB,QAAzB,EAAmCK,UAApE,GAAiF,EAA7F;;AAEA;AACA,YAAIC,OAAO,KAAKV,IAAL,CAAUW,KAAV,GAAgB,CAA3B;AACAL,gBAAQ9B,GAAGoC,eAAH,KAAuBF,IAA/B;;AAEA;AACA,eAAOlC,GAAGqC,CAAH,CAAKP,KAAL,EAAYC,KAAZ,CAAP;AACH,KA1EI;;AA4EL;;;;;AAMA;AACAO,eAAW,qBAAW;AAClB,aAAKjB,KAAL,IAAc,CAAd;;AAEA;AACA,aAAKP,YAAL,CAAkByB,MAAlB,GAA2B,YAAY,KAAKlB,KAAL,CAAWmB,QAAX,EAAvC;AACA;AACH;AAzFI,CAAT","file":"Game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // This property quotes the PreFab resource of stars\n        starPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        // The random scale of disappearing time for stars\n        maxStarDuration: 0,\n        minStarDuration: 0,\n\n        // Ground node for confirming the height of the generated star's position\n        ground: {\n            default: null,\n            type: cc.Node\n        },\n\n        // Player node for obtaining the jump height of the main character and controlling the\n        // movement switch of the main character.\n        player: {\n            default: null,\n            type: cc.Node\n        },\n\n        // Player score\n        scoreDisplay: {\n            default: null,\n            type: cc.Label\n        }\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad: function () {\n        // Obtain the anchor point of ground level on the y-axis\n        this.groundY = this.ground.y + this.ground.height/2; // this.ground.top may also work\n\n        // Generate a new star\n        this.spawnNewStar();\n\n        // Initialize score\n        this.score = 0;\n    },\n\n    spawnNewStar: function() {\n        // Generate a new node in the scene with a preset template\n        var newStar = cc.instantiate(this.starPrefab);\n\n        // Put the newly added node under the Canvas node\n        this.node.addChild(newStar);\n\n        // Set up a random position for the star\n        newStar.setPosition(this.getNewStarPosition());\n\n        // Deliver the concrete example of the Game component into the star component\n        newStar.getComponent('Star').game = this;\n    },\n\n    getNewStarPosition: function() {\n        var randX = 0;\n\n        // According to the position of the ground level and the main character's jump height, \n        // randomly obtain an anchor point of the star on the y axis\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight + 50;\n\n        // According to the width of the screen, randomly obain an anchor point of star on the x axis.\n        var maxX = this.node.width/2;\n        randX = cc.randomMinus1To1() * maxX;\n\n        // Return to the anchor point of the star\n        return cc.p(randX, randY);\n    },\n\n    /*\n    start () {\n\n    },\n    */\n\n    // update (dt) {},\n    gainScore: function() {\n        this.score += 1;\n\n        // Update the scoreDisplay label\n        this.scoreDisplay.string = 'Score: ' + this.score.toString();\n        //this.scoreDisplay.string = 'Cheese';\n    },\n});\n"]}